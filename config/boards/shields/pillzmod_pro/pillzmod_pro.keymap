#define ZMK_POINTING_DEFAULT_MOVE_VAL 1400  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 40    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define STRINGIFY(x) #x
#define EXPAND_AND_STRINGIFY(x) STRINGIFY(x)

#define KEYS_NONE
#define HYPER LS(LC(LA(LGUI)))

#define KEYS_LEFT 0  1  2  3  4  5  6 7 8 \
                  18 19 20 21 22 23 \
                  30 31 32 33 34 35 \
                  42 43 44 45 46 47 \
                  54 55 56 57 58 59 \
                  66 67 68 69 \
                  74 75 \
                  78 \
                  80 81 82 \

#define KEYS_RIGHT 9  10 11 12 13 14 15 16 17 \
                   24 25 26 27 28 29 \
                   36 37 38 39 40 41 \
                   48 49 50 51 52 53 \
                   60 61 62 63 64 65 \
                   70 71 72 73 \
                   76 77 \
                   79 \
                   83 84 85 \

#define THUMBS_LEFT 74 75 78 80 81 82

#define THUMBS_RIGHT 76 77 79 83 84 85

#define THUMBS THUMBS_LEFT THUMBS_RIGHT

#define HMT(ID, TERM, QTAP, RPI, KEYS, FLAVE) \
    ID: mod_tap_##ID { \
        compatible = "zmk,behavior-hold-tap"; \
        quick_tap_ms = <QTAP>; \
        tapping-term-ms = <TERM>; \
        flavor = FLAVE; \
        #binding-cells = <2>; \
        bindings = <&kp>, <&kp>; \
        require-prior-idle-ms = <RPI>; \
        hold-trigger-key-positions = <KEYS>; \
    };

#define LMT(ID, TERM, QTAP, RPI, KEYS, FLAVE) \
    ID: layer_tap_##ID { \
        compatible = "zmk,behavior-hold-tap"; \
        quick_tap_ms = <QTAP>; \
        tapping-term-ms = <TERM>; \
        flavor = FLAVE; \
        #binding-cells = <2>; \
        bindings = <&mo>, <&kp>; \
        require-prior-idle-ms = <RPI>; \
        hold-trigger-key-positions = <KEYS>; \
    };

&caps_word {
    continue-list = <UNDERSCORE SEMI PIPE AMPS MINUS BACKSPACE DELETE LSHFT RSHFT>;
};

&soft_off {
    hold-time-ms = <2000>;
};

/ {
    behaviors {
        #include "macros.dtsi"

        LMT(lkp, 125,  0,  0, KEYS_NONE, "hold-preferred")
        HMT(hmh, 125,  0,  0, KEYS_NONE, "hold-preferred")

        HMT(hmt, 160, 180, 100, KEYS_NONE, "balanced")

        HMT(hmr, 120, 0,   0,   KEYS_LEFT  THUMBS_LEFT,  "tap-preferred")
        HMT(hml, 120, 0,   0,   KEYS_RIGHT THUMBS_RIGHT, "tap-preferred")

        LMT(rlkp, 120,  0,  0, KEYS_LEFT  THUMBS_LEFT,  "tap-preferred")
        LMT(llkp, 120,  0,  0, KEYS_RIGHT THUMBS_RIGHT, "tap-preferred")

        lcw: layer_caps_word {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            quick_tap_ms = <0>;
            tapping-term-ms = <110>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&caps_word>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp ESC &kp F1  &kp F2      &kp F3    &kp F4    &kp F5  &kp F6 &kp F7 &kp F8                       &kp F9 &kp F10 &kp F11 &kp F12    &kp PSCRN    &kp SLCK   &kp PAUSE_BREAK &kp C_AL_CALC &soft_off
                &macro_backtick &kp N1    &kp N2      &kp N3    &kp N4        &kp N5                                                      &kp N6     &kp N7       &kp N8     &kp N9          &kp N0        &macro_block
                &macro_angles   &kp Q     &kp W       &kp E     &kp R         &kp T                                                       &kp Y      &kp U        &kp I      &kp O           &kp P         &macro_brackets
                &macro_quotes   &kp A     &kp S       &kp D     &hml LSHFT F  &kp G                                                       &kp H      &hmr RSHFT J &kp K      &kp L           &kp SEMI      &macro_dquotes
                &macro_parens   &kp Z     &kp X       &kp C     &kp V         &kp B                                                       &kp N      &kp M        &kp COMMA  &kp DOT         &kp FSLH      &macro_braces
                                &kp TAB   &kp SQT     &kp BSLH  &kp EQUAL                                                                            &kp MINUS    &kp LBKT   &kp RBKT        &kp GRAVE
                                                                                     &lcw LGUI 0 &kp HYPER      &kp HYPER &hmh RGUI DEL
                                                                                                 &lkp 1 HOME    &lkp 1 PG_UP
                                                                  &hmt LALT SPACE &hmh LCTRL ESC &lkp 3 END     &lkp 2 PG_DN &hmh RCTRL ENTER &hmt RALT BSPC
                                                                                                  &kp A   &kp B    &kp C
            >;
        };
        fun {
            bindings = <
                &trans    &trans    &trans  &trans   &trans  &trans  &trans  &trans  &trans                         &trans  &trans  &trans  &trans   &trans   &trans  &trans  &trans  &trans
                &kp F11   &kp F1    &kp F2           &kp F3         &kp F4          &kp F5                             &kp F6       &kp F7       &kp F8       &kp F9        &kp F10   &kp F12
                &kp SLCK  &kp LALT  &kp RA(LEFT)     &kp RA(DOWN)   &kp RA(UP)      &kp RA(RIGHT)                      &kp LC(LEFT) &kp LC(DOWN) &kp LC(UP)   &kp LC(RIGHT) &kp RALT  &kp PSCRN
                &none     &kp LSHFT &mmv MOVE_LEFT   &mmv MOVE_UP   &mmv MOVE_DOWN  &mmv MOVE_RIGHT                    &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT     &kp RSHFT &none
                &none     &kp LCTRL &kp RG(LEFT)     &kp RG(DOWN)   &kp RG(UP)      &kp RG(RIGHT)                      &kp HOME     &kp PG_DN    &kp PG_UP    &kp END       &kp RCTRL &none
                          &kp LGUI  &kp  C_PP        &kp C_PREV     &kp C_NEXT                                                      &kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE    &kp RGUI
                                                                                        &trans  &trans     &trans  &trans
                                                                                                &trans     &trans
                                                                                &trans  &trans  &trans     &trans  &trans  &trans
                                                                                            &trans   &trans   &trans
            >;
        };
        mod {
            bindings = <
                &trans      &trans       &trans       &trans       &trans       &trans  &trans  &trans  &trans   &trans  &trans &trans  &trans         &trans        &trans        &trans        &trans        &trans
                &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                                             &bt BT_DISC 0 &bt BT_DISC 1  &bt BT_DISC 2 &bt BT_DISC 3 &bt BT_DISC 4 &bt BT_CLR
                &bootloader &none        &none        &none        &none        &none                                                    &none         &none          &none         &none         &none         &bootloader
                &sys_reset  &none        &none        &none        &none        &none                                                    &none         &none          &none         &none         &none         &sys_reset
                &none       &none        &none        &none        &none        &none                                                    &none         &none          &none         &none         &none         &none
                            &none        &none        &none        &none                                                                               &none          &none         &none         &none
                                                                                                &none  &none     &none  &none
                                                                                                    &none     &none
                                                                                        &none  &none  &none     &none  &none  &none
                                                                                                    &none   &none   &none
            >;
        };
        pad {
            bindings = <
            &none   &none   &none   &none   &none   &none  &none  &none  &none                    &none  &none  &none &none  &none          &none           &none           &none         &none
            &none   &none   &none   &none   &none   &none                                                             &none  &kp KP_NUM     &kp KP_DIVIDE   &kp KP_MULTIPLY &kp KP_EQUAL  &none
            &none   &none   &none   &none   &none   &none                                                             &none  &kp KP_N7      &kp KP_N8       &kp KP_N9       &kp KP_MINUS  &none
            &none   &none   &none   &none   &none   &none                                                             &none  &kp KP_N4      &kp KP_N5       &kp KP_N6       &kp KP_PLUS   &none
            &none   &none   &none   &none   &none   &none                                                             &none  &kp KP_N1      &kp KP_N2       &kp KP_N3       &kp KP_ENTER  &none
                     &none   &none   &none   &none                                                                           &kp KP_EQUAL   &kp KP_NUMBER_0 &kp KP_DOT      &kp KP_ENTER
                                                                            &trans  &trans     &trans  &trans
                                                                                    &trans     &trans
                                                                    &trans  &trans  &trans     &trans  &trans  &trans
                                                                                &trans   &trans   &trans
            >;
        };
    };
};
